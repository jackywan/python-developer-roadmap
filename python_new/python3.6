新的语法特性：

PEP 498, 格式化的字符串文字
>>> width = 10
>>> precision = 4
>>> value = decimal.Decimal("12.34567")
>>> f"result: {value:{width}.{precision}}"

PEP 515, 数字文字中的下划线。
>>> 1_000_000_000_000_000
1000000000000000
>>> 0x_FF_FF_FF_FF
4294967295

PEP 526 , 标注变量类型的语法
primes: List[int] = []

captain: str  # Note: no initial value!

class Starship:
    stats: Dict[str, int] = {}
    
PEP 525, 异步生成器。
async def ticker(delay, to):
    """Yield numbers from 0 to *to* every *delay* seconds."""
    for i in range(to):
        yield i
        await asyncio.sleep(delay)
        
PEP 530: 异步推导。
result = [i async for i in aiter() if i % 2]

新的库模块：

secrets: PEP 506 – Secrets模块被加入Python标准库。

CPython 实现的改进：

根据 Raymond Hettinger 的提议 已将 dict 类型重新实现为使用 更紧凑的表示形式 并类似于 PyPy dict implementation。 这使得字典所使用的内存相对于 Python 3.5 版减少了 20% 到 25%。

类创建的定制过程通过 新协议 得到了简化。

类属性的定义顺序 现在会被保留。

现在 **kwargs 中的元素会与传给函数的关键字参数 保持对应顺序。

添加了 DTrace 和 SystemTap 探测支持

新的 PYTHONMALLOC 环境变量可被用来调试解释器的内存分配和访问错误。

标准库中的重大改进：

asyncio 模块获得了许多新特性，显著的可用性和性能提升，以及大量的问题修正。 从 Python 3.6 开始 asyncio 模块不再处于待定状态，它已被视为稳定 API。

实现了新的 文件系统路径协议 以支持 路径类对象。 所有操作路径的标准库函数已被更新为使用新的协议。

datetime 模块已获得对 本地时间消歧义 的支持。

typing 模块获得了大量的 改进。

tracemalloc 模块已被大幅重写，现在将被用于为 ResourceWarning 提供更好的输出，并为内存分配错误提供更好的诊断。 请参阅 PYTHONMALLOC 一节 来了解详情。

安全改进：

添加了 secrets 模块以简化适用于密码管理的高加密强度伪随机数的生成，例如账户验证、安全凭据等场景。

在 Linux 上，现在 os.urandom() 会阻塞直到系统的 urandom 熵池被初始化以提升安全性。 其理由参见 PEP 524。

hashlib 和 ssl 模块现在支持 OpenSSL 1.1.0。

ssl 模块的默认设置和特性集已得到改进。

hashlib 模块获得了对 BLAKE2, SHA-3 和 SHAKE 哈希算法以及 scrypt() 密钥派生函数的支持。

Windows改进：

PEP 528 和 PEP 529, 将Windows文件系统和控制台的编码更改为UTF-8

在交互式地使用 py.exe 启动器时，当用户未（通过命令行参数或配置文件）指定版本时不再优先选择 Python 2 而是选择 Python 3。 对声明行的处理则保持不变 —— 在这种情况下 “python” 还是指 Python 2。

python.exe 和 pythonw.exe 已被标记为支持长路径，这意味着不再有 260 个字符的路径长度限制。 详情参见 移除 MAX_PATH 限制。

可以添加一个 ._pth 文件来强制使用隔离模式和完整指定所有搜索路径来避免注册表和环境查找。 更多信息请参阅 相关文档。

现在 python36.zip 文件可以作为推断 PYTHONHOME 的标志。 更多信息请参阅 相关文档。
