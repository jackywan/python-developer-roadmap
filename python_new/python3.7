新的语法特性：

PEP 563，类型标注延迟求值。

向后不兼容的语法更改：

async 和 await 现在是保留的关键字。

新的库模块：

contextvars: PEP 567 -- 上下文变量

dataclasses: PEP 557 -- 数据类

importlib.resources

新的内置特性：

PEP 553, 新的 breakpoint() 函数。

对 Python 数据模型的改进：

PEP 562, 自定义可访问的模块属性。

PEP 560, typing模块和泛型类型的核心支持。

dict 对象会保持插入时的顺序这个特性 正式宣布 成为 Python 语言官方规范的一部分。

标准库中的重大改进：

asyncio 模块添加了新的功能，重大改进请参阅 可用性与性能提升。

time 模块现在提供 纳秒级精度函数 的支持。

CPython 实现的改进：

避免使用 ASCII 作为默认的文本编码：

PEP 538，传统 C 区域强制转换

PEP 540，强制 UTF-8 运行时模式

PEP 552，确定性的 .pyc 文件

新的开发运行时模式

PEP 565，改进的 DeprecationWarning 处理

C API 的改进：

PEP 539，用于线程本地存储的新 C API

文档的改进：

PEP 545, Python 文档翻译

新的文档翻译：Japanese，French 和 Korean。
